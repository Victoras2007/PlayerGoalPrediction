# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12rJxJE0c3GOxkH-cVIie7pXakyy_jSFj
"""

import numpy as np
import pandas as pd
import numpy as np
import kagglehub
import csv
import matplotlib.pyplot as plt
import seaborn as sns

# uploading dataset for players

df = pd.read_csv('/content/database.csv')

# uploding dataset for goalkeepers

dfg = pd.read_csv('/content/book3.csv')

df

dfg

# dropping columns not needed for our program

df.drop(columns=['#','Age','Date','Assists','Non-Penalty xG (npxG)' , 'Penalty Shoot','Yellow Cards', 'Red Cards', 'Touches', 'Dribbles', 'Tackles', 'Blocks', 'Expected Assists (xAG)', 'Shot-Creating Actions', 'Passes Completed', 'Passes Attempted', 'Pass Completion %', 'Progressive Passes', 'Carries', 'Progressive Carries', 'Dribble Attempts', 'Goal-Creating Actions','Successful Dribbles'], inplace=True)

df.isnull().sum()   # no missing values in df

dfg.isnull().sum()  # cheking for missing values

dfg.isnull().sum() / len(df) * 100  # checking percentage of missing values

# since 35% of the data in the last row is missing we will drop it
dfg.dropna(axis='columns')

# view the new dataframe

df

# view the new dataframe

dfg

# visualising data using histograms for both DataFrames

plt.figure(figsize=(100,100))
sns.histplot(x=df['Minutes'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Average Minutes Played by each Player', fontsize=120)
plt.xlabel('Minutes Played per 90mins', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=df['Penalty Shoot on Goal'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Average Penalty Shoots on Goal by each Player', fontsize=120)
plt.xlabel('Penalty Shoot on Goal per Match', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=df['Total Shoot'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Average Total Shoots by each Player', fontsize=120)
plt.xlabel('Total Shoots per Match', fontsize=80)
plt.ylabel('Frequuency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=df['Shoot on Target'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Average Shoots on Target by each Player', fontsize=120)
plt.xlabel('Total Shoot on Target per Match', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=df['Expected Goals (xG)'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Expected Goals by each Player', fontsize=120)
plt.xlabel('Expected Goals (xG) per Match', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=dfg['GA'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Goals Scored Against Each Goalkeeper', fontsize=120)
plt.xlabel('Number of Goals Against', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=dfg['Saves'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Goalkeeper Saves', fontsize=120)
plt.xlabel('Number of Goalkeeper Saves', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=dfg['Save%'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Goalkeeper Saves Percentage', fontsize=120)
plt.xlabel('Percentage of Goalkeeper Saves', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=dfg['PKsv'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Penalty Kicks Saved', fontsize=120)
plt.xlabel('Number of Penalty Kicks Saved', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()

plt.figure(figsize=(100,100))
sns.histplot(x=dfg['PKsv%'], bins=40, kde=True)
plt.xticks(fontsize=70)
plt.yticks(fontsize=70)
plt.title('Penalty Kicks Saved Percentage', fontsize=120)
plt.xlabel('Percentage of Penalty Kicks Saved', fontsize=80)
plt.ylabel('Frequency', fontsize=80)
plt.grid()
plt.show()